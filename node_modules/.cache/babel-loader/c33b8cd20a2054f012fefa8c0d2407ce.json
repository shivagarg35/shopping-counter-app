{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/shiva/react/counter-app/src/components/counter.jsx\";\nimport React, { Component } from 'react';\n\nclass Counter extends Component {\n  constructor() {\n    super();\n    this.state = {\n      count: 0,\n      tags: [\"tag1\"]\n    };\n    this.handleIncrement = this.handleIncrement.bind(this);\n  }\n\n  renderTags() {\n    if (this.state.tags.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"There are no tags\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 50\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: this.state.tags.map(tag => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: tag\n      }, tag, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 48\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 16\n    }, this);\n  }\n\n  handleIncrement() {\n    console.log('Increment Clicked', this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: this.getBadgeClasses(),\n        children: this.formatCount()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleIncrement,\n        className: \"btn btn-secondary btn-sm\",\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this);\n  }\n\n  getBadgeClasses() {\n    let classes = \"badge m-2 badge-\";\n    classes += this.state.count === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n\n  formatCount() {\n    return this.state.count === 0 ? 'Zero' : this.state.count;\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["/home/shiva/react/counter-app/src/components/counter.jsx"],"names":["React","Component","Counter","constructor","state","count","tags","handleIncrement","bind","renderTags","length","map","tag","console","log","render","getBadgeClasses","formatCount","classes"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAM5BE,EAAAA,WAAW,GAAG;AACV;AADU,SALdC,KAKc,GALN;AACJC,MAAAA,KAAK,EAAE,CADH;AAEJC,MAAAA,IAAI,EAAE,CAAC,MAAD;AAFF,KAKM;AAEV,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAvB;AACH;;AAEDC,EAAAA,UAAU,GAAG;AACT,QAAI,KAAKL,KAAL,CAAWE,IAAX,CAAgBI,MAAhB,KAA2B,CAA/B,EAAkC,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAClC,wBAAO;AAAA,gBAAK,KAAKN,KAAL,CAAWE,IAAX,CAAgBK,GAAhB,CAAoBC,GAAG,iBAAI;AAAA,kBAAeA;AAAf,SAASA,GAAT;AAAA;AAAA;AAAA;AAAA,cAA3B;AAAL;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAEDL,EAAAA,eAAe,GAAG;AACdM,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC,IAAjC;AACH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,wBACA,QAAC,KAAD,CAAO,QAAP;AAAA,8BACI;AAAM,QAAA,SAAS,EAAE,KAAKC,eAAL,EAAjB;AAAA,kBAA0C,KAAKC,WAAL;AAA1C;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAE,KAAKV,eAAtB;AAAuC,QAAA,SAAS,EAAC,0BAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAQH;;AAEDS,EAAAA,eAAe,GAAG;AACd,QAAIE,OAAO,GAAG,kBAAd;AACAA,IAAAA,OAAO,IAAK,KAAKd,KAAL,CAAWC,KAAX,KAAqB,CAAtB,GAA2B,SAA3B,GAAuC,SAAlD;AACA,WAAOa,OAAP;AACH;;AAEDD,EAAAA,WAAW,GAAG;AACV,WAAO,KAAKb,KAAL,CAAWC,KAAX,KAAqB,CAArB,GAAyB,MAAzB,GAAkC,KAAKD,KAAL,CAAWC,KAApD;AACH;;AAvC2B;;AA0ChC,eAAeH,OAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Counter extends Component {\n    state = {\n        count: 0,\n        tags: [\"tag1\"]\n    };\n\n    constructor() {\n        super();\n        this.handleIncrement = this.handleIncrement.bind(this);\n    }\n\n    renderTags() {\n        if (this.state.tags.length === 0) return <p>There are no tags</p>\n        return <ul>{this.state.tags.map(tag => <li key={tag}>{tag}</li>)}</ul>;\n    }\n\n    handleIncrement() {\n        console.log('Increment Clicked', this)\n    }\n    \n    render(){\n        return ( \n        <React.Fragment>\n            <span className={this.getBadgeClasses()}>{this.formatCount()}</span>\n            <button onClick={this.handleIncrement} className='btn btn-secondary btn-sm'>Increment</button>\n            {/* {this.state.tags.length=== 0 && \"Please create a new tag\"}\n            { this.renderTags() } */}\n        </React.Fragment>\n        );\n    }\n\n    getBadgeClasses() {\n        let classes = \"badge m-2 badge-\";\n        classes += (this.state.count === 0) ? \"warning\" : \"primary\";\n        return classes;\n    }\n\n    formatCount() {\n        return this.state.count === 0 ? 'Zero' : this.state.count;\n    }\n}\n \nexport default Counter;"]},"metadata":{},"sourceType":"module"}